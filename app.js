require('dotenv').config()
const express = require('express')
const mongoose = require('mongoose')
const app = express()
const swaggerJsdoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express')
const basicAuth = require('basic-auth')
const port = process.env.PORT

// Connection to Database
mongoose.connect(process.env.DATABASE_URL, { useNewUrlParser: true, useUnifiedTopology: true} )
const db = mongoose.connection
db.on('error', (error) => console.error(error))
db.once('open', () => console.log('connected to database'))

const auth = (req, res, next) => {
  var user = basicAuth(req)
  if(!user || !user.name || !user.pass) {
    res.set('WWW-Authenticate','Basic realm=Authorization Required')
    res.sendStatus(401);
  }

  if(user.name === 'admin' && user.pass === '1234') {
    next()
  }else{
    res.set('WWW-Authenticate','Basic realm=Authorization Required')
    res.sendStatus(401);
  }
}

// To make express accept the json
app.use(express.json())

const options = {
  swaggerDefinition: {
    // Like the one described here: https://swagger.io/specification/#infoObject
    info: {
      title: 'Subscriber DEMO API',
      version: '1.0.0',
      description: 'Test Express API with autogenerated swagger doc',
    },
    servers:["http://localhost:3000"]
  },
  // List of files to be processes. You can also set globs './routes/*.js'
  apis: ['./routes/*.js'],
};

const specs = swaggerJsdoc(options);
app.use('/api-docs', auth, swaggerUi.serve, swaggerUi.setup(specs))

const subscribersRouter = require('./routes/subscribers')
app.use('/api/subscribers', subscribersRouter)

app.listen(port, () => console.log("server started with port "+port))